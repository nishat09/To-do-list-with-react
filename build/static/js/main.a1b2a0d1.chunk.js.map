{"version":3,"sources":["components/todoItems.jsx","components/App.jsx","index.js"],"names":["TodoItems","props","isDone","setIsDone","useState","React","createElement","onClick","prevValue","key","index","style","display","justifyContent","alignItems","textDecoration","item","e","stopPropagation","deleteItem","App","inputText","setInputText","items","setItems","id","prevItems","filter","className","onChange","event","newInput","target","value","type","map","ReactDOM","render","document","getElementById"],"mappings":"8LA4CeA,MAvCf,SAAmBC,GAEf,MAAOC,EAAOC,GAAWC,oBAAS,GAQlC,OACIC,IAAAC,cAAA,MACAC,QARJ,WACIJ,EAAWK,IACCN,IASZO,IAAKR,EAAMS,MACXC,MAAO,CACHC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,eAAgBb,EAAQ,eAAgB,SAG3CD,EAAMe,KAEPX,IAAAC,cAAA,UACAC,QAAUU,IACRA,EAAEC,kBACFjB,EAAMkB,WAAWlB,EAAMS,SAE1B,YCgBQU,MAjDf,WACE,MAAOC,EAAWC,GAAgBlB,mBAAS,KACpCmB,EAAOC,GAAYpB,mBAAS,IAcnC,SAASe,EAAWM,GAClBD,EAAUE,GAAcA,EAAUC,OAAO,CAACX,EAAMN,IAAUA,IAAUe,IAGtE,OACEpB,IAAAC,cAAA,OAAKsB,UAAU,aACbvB,IAAAC,cAAA,OAAKsB,UAAU,WACbvB,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKsB,UAAU,QACbvB,IAAAC,cAAA,SAAOuB,SAtBb,SAA2BC,GACzB,MAAMC,EAAWD,EAAME,OAAOC,MAC9BX,EAAaS,IAoB2BE,MAAOZ,EAAWa,KAAK,SAC3D7B,IAAAC,cAAA,UAAQC,QAlBd,WACEiB,EAAUE,GACD,IAAIA,EAAWL,IAExBC,EAAa,MAePjB,IAAAC,cAAA,YAAM,SAGVD,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGiB,EAAMY,IAAI,CAACnB,EAAMN,IAEdL,IAAAC,cAACN,EAAS,CACRS,IAAKC,EACLA,MAAOA,EACPM,KAAMA,EACNG,WAAYA,S,KCpC5BiB,IAASC,OAAOhC,IAAAC,cAACc,EAAG,MAAKkB,SAASC,eAAe,U","file":"static/js/main.a1b2a0d1.chunk.js","sourcesContent":["import React, {useState} from \"react\"\r\n\r\n\r\n\r\n\r\nfunction TodoItems(props){\r\n\r\n    const [isDone,setIsDone]=useState(false)\r\n\r\n    function handleClick(){\r\n        setIsDone((prevValue)=>{\r\n            return !isDone\r\n        })\r\n    }\r\n\r\n    return(\r\n        <li \r\n        onClick={handleClick}\r\n\r\n        \r\n        key={props.index}\r\n        style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            textDecoration: isDone? \"line-through\": \"none\"\r\n        }}\r\n    >\r\n        {props.item}\r\n\r\n        <button\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          props.deleteItem(props.index);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TodoItems;","import React, { useState } from \"react\";\nimport TodoItems from \"./todoItems\";\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleInputChange(event) {\n    const newInput = event.target.value;\n    setInputText(newInput);\n  }\n\n  function addItems() {\n    setItems((prevItems) => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems((prevItems) => prevItems.filter((item, index) => index !== id));\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleInputChange} value={inputText} type=\"text\" />\n        <button onClick={addItems}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((item, index) => {\n            return (\n              <TodoItems\n                key={index}\n                index={index}\n                item={item}\n                deleteItem={deleteItem}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}